service: myFirstServerlessProject

provider:
  name: aws
  runtime: nodejs8.10
  region: us-east-1
  environment:
    REGION: ${self:provider.region}
    PENDING_ORDER_QUEUE:
      Ref: PendingOrdersQueue
    COMPLETED_ORDER_TABLE: CompletedOrderTable
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "sqs:SendMessage"
      Resource:
        - "arn:aws:sqs:${self:provider.region}:*:PendingOrdersQueue"
    - Effect: "Allow"
      Action:
        - "dynamodb:GetItem"
        - "dynamodb:PutItem"
        - "dynamodb:UpdateItem"
        - "dynamodb:DeleteItem"
      Resource:
        - "arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.COMPLETED_ORDER_TABLE}"

functions:
  makeAnOrder:
    handler: pizza.makeAnOrder
    events:
      - http:
          method: post
          path: /make-order
  prepairOder:
    handler: pizza.prepairOrder
    events:
      - sqs:
          arn:
            Fn::GetAtt:
              - PendingOrdersQueue
              - Arn
          batchSize: 1

resources:
  Resources:
    PendingOrdersQueue:
      Type: "AWS::SQS::Queue"
      Properties:
          QueueName: "PendingOrdersQueue"
    CompletedOrderTable:
      Type: "AWS::DynamoDB::Table"
      Properties:
        AttributeDefinitions:
        - AttributeName: "orderId"
          AttributeType: "S"
        KeySchema:
        - AttributeName: "orderId"
          KeyType: "HASH"
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.COMPLETED_ORDER_TABLE}

